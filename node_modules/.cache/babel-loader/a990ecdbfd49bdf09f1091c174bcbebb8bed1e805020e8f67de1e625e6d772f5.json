{"ast":null,"code":"import React from'react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{darcula}from'react-syntax-highlighter/dist/esm/styles/prism';import'./Incl.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CppVectorPage=()=>{const code=\"#include <iostream>\\n#include <vector>\\n#include <algorithm> // \\u0414\\u043B\\u044F \\u0441\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438\\n\\nint main() {\\n    std::vector<int> numbers = {5, 2, 9, 1, 5, 6};\\n\\n    // \\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\n    numbers.push_back(10);\\n\\n    // \\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\n    numbers.pop_back();\\n\\n    // \\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u0432\\u0435\\u043A\\u0442\\u043E\\u0440\\u0430\\n    std::sort(numbers.begin(), numbers.end());\\n\\n    // \\u0412\\u044B\\u0432\\u043E\\u0434 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\\n    std::cout << \\\"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B \\u0432\\u0435\\u043A\\u0442\\u043E\\u0440\\u0430: \\\";\\n    for (int num : numbers) {\\n        std::cout << num << \\\" \\\";\\n    }\\n    std::cout << std::endl;\\n\\n    return 0;\\n}\";return/*#__PURE__*/_jsxs(\"div\",{className:\"container fade-in\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430 \\u0441 \\u0432\\u0435\\u043A\\u0442\\u043E\\u0440\\u0430\\u043C\\u0438 \\u043D\\u0430 C++\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"cpp\",style:darcula,children:code})}),/*#__PURE__*/_jsxs(\"div\",{className:\"explanation\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041E\\u0431\\u044A\\u044F\\u0441\\u043D\\u0435\\u043D\\u0438\\u0435:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440 \\u2014 \\u044D\\u0442\\u043E \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0438\\u0437\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439 \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440. \\u0412 \\u044D\\u0442\\u043E\\u043C \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440\\u0435 \\u043C\\u044B:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u044F\\u0435\\u043C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"}),\" \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \",/*#__PURE__*/_jsx(\"code\",{children:\"push_back()\"}),\".\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0423\\u0434\\u0430\\u043B\\u044F\\u0435\\u043C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"}),\" \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \",/*#__PURE__*/_jsx(\"code\",{children:\"pop_back()\"}),\".\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C \\u0432\\u0435\\u043A\\u0442\\u043E\\u0440\"}),\" \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \",/*#__PURE__*/_jsx(\"code\",{children:\"std::sort()\"}),\".\"]})]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0412\\u0435\\u043A\\u0442\\u043E\\u0440\\u044B \\u043E\\u0447\\u0435\\u043D\\u044C \\u0443\\u0434\\u043E\\u0431\\u043D\\u044B \\u0434\\u043B\\u044F \\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u044F \\u0438 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445, \\u0442\\u0430\\u043A \\u043A\\u0430\\u043A \\u043E\\u043D\\u0438 \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u044E\\u0442 \\u043F\\u0430\\u043C\\u044F\\u0442\\u044C\\u044E.\"})]})]});};export default CppVectorPage;","map":{"version":3,"names":["React","Prism","SyntaxHighlighter","darcula","jsx","_jsx","jsxs","_jsxs","CppVectorPage","code","className","children","language","style"],"sources":["C:/Users/apchhui/Documents/cycle/website/frontend/src/tutorials/tutorial/c/CppVectorPage.js"],"sourcesContent":["import React from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport './Incl.css';\r\n\r\nconst CppVectorPage = () => {\r\n  const code = `#include <iostream>\r\n#include <vector>\r\n#include <algorithm> // Для сортировки\r\n\r\nint main() {\r\n    std::vector<int> numbers = {5, 2, 9, 1, 5, 6};\r\n\r\n    // Добавление элемента\r\n    numbers.push_back(10);\r\n\r\n    // Удаление последнего элемента\r\n    numbers.pop_back();\r\n\r\n    // Сортировка вектора\r\n    std::sort(numbers.begin(), numbers.end());\r\n\r\n    // Вывод элементов\r\n    std::cout << \"Элементы вектора: \";\r\n    for (int num : numbers) {\r\n        std::cout << num << \" \";\r\n    }\r\n    std::cout << std::endl;\r\n\r\n    return 0;\r\n}`;\r\n\r\n  return (\r\n    <div className=\"container fade-in\">\r\n      <h1>Работа с векторами на C++</h1>\r\n      <div className=\"card\">\r\n        <SyntaxHighlighter language=\"cpp\" style={darcula}>\r\n          {code}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n      <div className=\"explanation\">\r\n        <h2>Объяснение:</h2>\r\n        <p>\r\n          Вектор — это динамический массив, который может изменять свой размер. В этом примере мы:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Добавляем элемент</strong> с помощью <code>push_back()</code>.\r\n          </li>\r\n          <li>\r\n            <strong>Удаляем элемент</strong> с помощью <code>pop_back()</code>.\r\n          </li>\r\n          <li>\r\n            <strong>Сортируем вектор</strong> с помощью <code>std::sort()</code>.\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          Векторы очень удобны для хранения и обработки данных, так как они автоматически управляют памятью.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CppVectorPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,GAAI,CAAAC,iBAAiB,KAAQ,0BAA0B,CACrE,OAASC,OAAO,KAAQ,gDAAgD,CACxE,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,IAAI,8hCAwBV,CAEA,mBACEF,KAAA,QAAKG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCN,IAAA,OAAAM,QAAA,CAAI,qHAAyB,CAAI,CAAC,cAClCN,IAAA,QAAKK,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBN,IAAA,CAACH,iBAAiB,EAACU,QAAQ,CAAC,KAAK,CAACC,KAAK,CAAEV,OAAQ,CAAAQ,QAAA,CAC9CF,IAAI,CACY,CAAC,CACjB,CAAC,cACNF,KAAA,QAAKG,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BN,IAAA,OAAAM,QAAA,CAAI,+DAAW,CAAI,CAAC,cACpBN,IAAA,MAAAM,QAAA,CAAG,kcAEH,CAAG,CAAC,cACJJ,KAAA,OAAAI,QAAA,eACEJ,KAAA,OAAAI,QAAA,eACEN,IAAA,WAAAM,QAAA,CAAQ,mGAAiB,CAAQ,CAAC,sDAAW,cAAAN,IAAA,SAAAM,QAAA,CAAM,aAAW,CAAM,CAAC,IACvE,EAAI,CAAC,cACLJ,KAAA,OAAAI,QAAA,eACEN,IAAA,WAAAM,QAAA,CAAQ,uFAAe,CAAQ,CAAC,sDAAW,cAAAN,IAAA,SAAAM,QAAA,CAAM,YAAU,CAAM,CAAC,IACpE,EAAI,CAAC,cACLJ,KAAA,OAAAI,QAAA,eACEN,IAAA,WAAAM,QAAA,CAAQ,6FAAgB,CAAQ,CAAC,sDAAW,cAAAN,IAAA,SAAAM,QAAA,CAAM,aAAW,CAAM,CAAC,IACtE,EAAI,CAAC,EACH,CAAC,cACLN,IAAA,MAAAM,QAAA,CAAG,mgBAEH,CAAG,CAAC,EACD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}