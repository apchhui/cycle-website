{"ast":null,"code":"import React from'react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{darcula}from'react-syntax-highlighter/dist/esm/styles/prism';import'./Incl.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CppGuessNumberPage=()=>{const code=\"#include <iostream>\\n#include <cstdlib> // \\u0414\\u043B\\u044F rand() \\u0438 srand()\\n#include <ctime>   // \\u0414\\u043B\\u044F time()\\n\\nint main() {\\n    srand(time(0)); // \\u0418\\u043D\\u0438\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u0433\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0445 \\u0447\\u0438\\u0441\\u0435\\u043B\\n    int secretNumber = rand() % 100 + 1; // \\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \\u043E\\u0442 1 \\u0434\\u043E 100\\n    int guess = 0;\\n    int attempts = 0;\\n\\n    std::cout << \\\"\\u042F \\u0437\\u0430\\u0433\\u0430\\u0434\\u0430\\u043B \\u0447\\u0438\\u0441\\u043B\\u043E \\u043E\\u0442 1 \\u0434\\u043E 100. \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439 \\u0443\\u0433\\u0430\\u0434\\u0430\\u0442\\u044C!\\\" << std::endl;\\n\\n    while (guess != secretNumber) {\\n        std::cout << \\\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435: \\\";\\n        std::cin >> guess;\\n        attempts++;\\n\\n        if (guess < secretNumber) {\\n            std::cout << \\\"\\u0421\\u043B\\u0438\\u0448\\u043A\\u043E\\u043C \\u043C\\u0430\\u043B\\u043E!\\\" << std::endl;\\n        } else if (guess > secretNumber) {\\n            std::cout << \\\"\\u0421\\u043B\\u0438\\u0448\\u043A\\u043E\\u043C \\u043C\\u043D\\u043E\\u0433\\u043E!\\\" << std::endl;\\n        }\\n    }\\n\\n    std::cout << \\\"\\u041F\\u043E\\u0437\\u0434\\u0440\\u0430\\u0432\\u043B\\u044F\\u044E! \\u0412\\u044B \\u0443\\u0433\\u0430\\u0434\\u0430\\u043B\\u0438 \\u0447\\u0438\\u0441\\u043B\\u043E \\u0437\\u0430 \\\" << attempts << \\\" \\u043F\\u043E\\u043F\\u044B\\u0442\\u043E\\u043A.\\\" << std::endl;\\n\\n    return 0;\\n}\";return/*#__PURE__*/_jsxs(\"div\",{className:\"container fade-in\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0418\\u0433\\u0440\\u0430 \\\"\\u0423\\u0433\\u0430\\u0434\\u0430\\u0439 \\u0447\\u0438\\u0441\\u043B\\u043E\\\" \\u043D\\u0430 C++\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"cpp\",style:darcula,children:code})}),/*#__PURE__*/_jsxs(\"div\",{className:\"explanation\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041E\\u0431\\u044A\\u044F\\u0441\\u043D\\u0435\\u043D\\u0438\\u0435:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u042D\\u0442\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430, \\u0433\\u0434\\u0435 \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440 \\u0437\\u0430\\u0433\\u0430\\u0434\\u044B\\u0432\\u0430\\u0435\\u0442 \\u0447\\u0438\\u0441\\u043B\\u043E, \\u0430 \\u0438\\u0433\\u0440\\u043E\\u043A \\u043F\\u044B\\u0442\\u0430\\u0435\\u0442\\u0441\\u044F \\u0435\\u0433\\u043E \\u0443\\u0433\\u0430\\u0434\\u0430\\u0442\\u044C. \\u0412\\u043E\\u0442 \\u043A\\u0430\\u043A \\u044D\\u0442\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"srand(time(0))\"}),\" \\u0438\\u043D\\u0438\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u0442 \\u0433\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0445 \\u0447\\u0438\\u0441\\u0435\\u043B \\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u043C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0435\\u043C.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"rand() % 100 + 1\"}),\" \\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u0443\\u0435\\u0442 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \\u043E\\u0442 1 \\u0434\\u043E 100.\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u0418\\u0433\\u0440\\u043E\\u043A \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442 \\u0441\\u0432\\u043E\\u0438 \\u043F\\u0440\\u0435\\u0434\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F, \\u0430 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442, \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435 \\u0438\\u043B\\u0438 \\u043C\\u0435\\u043D\\u044C\\u0448\\u0435 \\u0437\\u0430\\u0433\\u0430\\u0434\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u0418\\u0433\\u0440\\u0430 \\u043F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0430\\u0435\\u0442\\u0441\\u044F, \\u043F\\u043E\\u043A\\u0430 \\u0438\\u0433\\u0440\\u043E\\u043A \\u043D\\u0435 \\u0443\\u0433\\u0430\\u0434\\u0430\\u0435\\u0442 \\u0447\\u0438\\u0441\\u043B\\u043E.\"})]})]})]});};export default CppGuessNumberPage;","map":{"version":3,"names":["React","Prism","SyntaxHighlighter","darcula","jsx","_jsx","jsxs","_jsxs","CppGuessNumberPage","code","className","children","language","style"],"sources":["C:/Users/apchhui/Documents/cycle/website/frontend/src/tutorials/tutorial/c/GuessNum.js"],"sourcesContent":["import React from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport './Incl.css';\r\n\r\nconst CppGuessNumberPage = () => {\r\n  const code = `#include <iostream>\r\n#include <cstdlib> // Для rand() и srand()\r\n#include <ctime>   // Для time()\r\n\r\nint main() {\r\n    srand(time(0)); // Инициализация генератора случайных чисел\r\n    int secretNumber = rand() % 100 + 1; // Случайное число от 1 до 100\r\n    int guess = 0;\r\n    int attempts = 0;\r\n\r\n    std::cout << \"Я загадал число от 1 до 100. Попробуй угадать!\" << std::endl;\r\n\r\n    while (guess != secretNumber) {\r\n        std::cout << \"Введите ваше предположение: \";\r\n        std::cin >> guess;\r\n        attempts++;\r\n\r\n        if (guess < secretNumber) {\r\n            std::cout << \"Слишком мало!\" << std::endl;\r\n        } else if (guess > secretNumber) {\r\n            std::cout << \"Слишком много!\" << std::endl;\r\n        }\r\n    }\r\n\r\n    std::cout << \"Поздравляю! Вы угадали число за \" << attempts << \" попыток.\" << std::endl;\r\n\r\n    return 0;\r\n}`;\r\n\r\n  return (\r\n    <div className=\"container fade-in\">\r\n      <h1>Игра \"Угадай число\" на C++</h1>\r\n      <div className=\"card\">\r\n        <SyntaxHighlighter language=\"cpp\" style={darcula}>\r\n          {code}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n      <div className=\"explanation\">\r\n        <h2>Объяснение:</h2>\r\n        <p>\r\n          Это простая игра, где компьютер загадывает число, а игрок пытается его угадать. Вот как это работает:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>srand(time(0))</strong> инициализирует генератор случайных чисел текущим временем.\r\n          </li>\r\n          <li>\r\n            <strong>rand() % 100 + 1</strong> генерирует случайное число от 1 до 100.\r\n          </li>\r\n          <li>\r\n            Игрок вводит свои предположения, а программа подсказывает, больше или меньше загаданное число.\r\n          </li>\r\n          <li>\r\n            Игра продолжается, пока игрок не угадает число.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CppGuessNumberPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,GAAI,CAAAC,iBAAiB,KAAQ,0BAA0B,CACrE,OAASC,OAAO,KAAQ,gDAAgD,CACxE,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,IAAI,ssDA2BV,CAEA,mBACEF,KAAA,QAAKG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCN,IAAA,OAAAM,QAAA,CAAI,mHAA0B,CAAI,CAAC,cACnCN,IAAA,QAAKK,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBN,IAAA,CAACH,iBAAiB,EAACU,QAAQ,CAAC,KAAK,CAACC,KAAK,CAAEV,OAAQ,CAAAQ,QAAA,CAC9CF,IAAI,CACY,CAAC,CACjB,CAAC,cACNF,KAAA,QAAKG,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BN,IAAA,OAAAM,QAAA,CAAI,+DAAW,CAAI,CAAC,cACpBN,IAAA,MAAAM,QAAA,CAAG,igBAEH,CAAG,CAAC,cACJJ,KAAA,OAAAI,QAAA,eACEJ,KAAA,OAAAI,QAAA,eACEN,IAAA,WAAAM,QAAA,CAAQ,gBAAc,CAAQ,CAAC,kUACjC,EAAI,CAAC,cACLJ,KAAA,OAAAI,QAAA,eACEN,IAAA,WAAAM,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,uLACnC,EAAI,CAAC,cACLN,IAAA,OAAAM,QAAA,CAAI,gfAEJ,CAAI,CAAC,cACLN,IAAA,OAAAM,QAAA,CAAI,oPAEJ,CAAI,CAAC,EACH,CAAC,EACF,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}