{"ast":null,"code":"import React from'react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{darcula}from'react-syntax-highlighter/dist/esm/styles/prism';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DatabasePage=()=>{const code=\"import sqlite3\\n\\n# \\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043A \\u0431\\u0430\\u0437\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 (\\u0438\\u043B\\u0438 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435, \\u0435\\u0441\\u043B\\u0438 \\u0435\\u0451 \\u043D\\u0435\\u0442)\\nconn = sqlite3.connect('example.db')\\ncursor = conn.cursor()\\n\\n# \\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B\\ncursor.execute('''CREATE TABLE IF NOT EXISTS users\\n                  (id INTEGER PRIMARY KEY, name TEXT, age INTEGER)''')\\n\\n# \\u0412\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\\ncursor.execute(\\\"INSERT INTO users (name, age) VALUES ('Alice', 30)\\\")\\ncursor.execute(\\\"INSERT INTO users (name, age) VALUES ('Bob', 25)\\\")\\n\\n# \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\\nconn.commit()\\n\\n# \\u0412\\u044B\\u0431\\u043E\\u0440\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\\ncursor.execute(\\\"SELECT * FROM users\\\")\\nrows = cursor.fetchall()\\n\\nfor row in rows:\\n    print(row)\\n\\n# \\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u0438\\u0435 \\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0435\\u043D\\u0438\\u044F\\nconn.close()\";return/*#__PURE__*/_jsxs(\"div\",{className:\"container fade-in\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430 \\u0441 SQLite \\u0432 Python\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"python\",style:darcula,children:code})})]});};export default DatabasePage;","map":{"version":3,"names":["React","Prism","SyntaxHighlighter","darcula","jsx","_jsx","jsxs","_jsxs","DatabasePage","code","className","children","language","style"],"sources":["C:/Users/apchhui/Documents/cycle/website/frontend/src/tutorials/tutorial/python/DataBase.js"],"sourcesContent":["import React from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst DatabasePage = () => {\r\n  const code = `import sqlite3\r\n\r\n# Подключение к базе данных (или создание, если её нет)\r\nconn = sqlite3.connect('example.db')\r\ncursor = conn.cursor()\r\n\r\n# Создание таблицы\r\ncursor.execute('''CREATE TABLE IF NOT EXISTS users\r\n                  (id INTEGER PRIMARY KEY, name TEXT, age INTEGER)''')\r\n\r\n# Вставка данных\r\ncursor.execute(\"INSERT INTO users (name, age) VALUES ('Alice', 30)\")\r\ncursor.execute(\"INSERT INTO users (name, age) VALUES ('Bob', 25)\")\r\n\r\n# Сохранение изменений\r\nconn.commit()\r\n\r\n# Выборка данных\r\ncursor.execute(\"SELECT * FROM users\")\r\nrows = cursor.fetchall()\r\n\r\nfor row in rows:\r\n    print(row)\r\n\r\n# Закрытие соединения\r\nconn.close()`;\r\n\r\n  return (\r\n    <div className=\"container fade-in\">\r\n      <h1>Работа с SQLite в Python</h1>\r\n      <div className=\"card\">\r\n        <SyntaxHighlighter language=\"python\" style={darcula}>\r\n          {code}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatabasePage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,GAAI,CAAAC,iBAAiB,KAAQ,0BAA0B,CACrE,OAASC,OAAO,KAAQ,gDAAgD,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,IAAI,iuCAyBC,CAEX,mBACEF,KAAA,QAAKG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCN,IAAA,OAAAM,QAAA,CAAI,kEAAwB,CAAI,CAAC,cACjCN,IAAA,QAAKK,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBN,IAAA,CAACH,iBAAiB,EAACU,QAAQ,CAAC,QAAQ,CAACC,KAAK,CAAEV,OAAQ,CAAAQ,QAAA,CACjDF,IAAI,CACY,CAAC,CACjB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}